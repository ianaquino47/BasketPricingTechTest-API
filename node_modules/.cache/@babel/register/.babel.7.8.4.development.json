{
  "{\"sourceRoot\":\"/Users/iaquino47/Projects/shopping-basket/test\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/iaquino47/Projects/shopping-basket\",\"filename\":\"/Users/iaquino47/Projects/shopping-basket/test/shopping_spec.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/iaquino47/Projects/shopping-basket\",\"plugins\":[],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/iaquino47/Projects/shopping-basket/test",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/iaquino47/Projects/shopping-basket",
      "filename": "/Users/iaquino47/Projects/shopping-basket/test/shopping_spec.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/iaquino47/Projects/shopping-basket",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/iaquino47/Projects/shopping-basket/test/shopping_spec.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/iaquino47/Projects/shopping-basket/test/shopping_spec.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/iaquino47/Projects/shopping-basket/test",
        "sourceFileName": "shopping_spec.js"
      }
    },
    "ast": null,
    "code": "const request = require(\"request\"),\n      assert = require('assert'),\n      base_url = \"http://localhost:5000/\";\n\nimport { countItems } from '../helpermethods';\ndescribe(\"Response Test\", () => {\n  describe(\"/api/shopping_total\", function () {\n    it(\"PUT returns status code 200\", function (done) {\n      request({\n        url: base_url + \"api/shopping_total\",\n        method: \"PUT\",\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        json: {\n          \"items\": [\"Apples\", \"Milk\", \"Soup\"],\n          \"currency\": \"USD\"\n        }\n      }, function (error, response, body) {\n        assert.equal(200, response.statusCode);\n        console.log(response.body);\n        done();\n      });\n    });\n  });\n});\ndescribe(\"Count items in a list\", () => {\n  describe(\"countItems\", function () {\n    it(\"returns an object - items: count\", function (done) {\n      const items = [\"Apples\", \"Milk\", \"Soup\"];\n      console.log(countItems(items));\n      assert.equal(200, countItems(items));\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNob3BwaW5nX3NwZWMuanMiXSwibmFtZXMiOlsicmVxdWVzdCIsInJlcXVpcmUiLCJhc3NlcnQiLCJiYXNlX3VybCIsImNvdW50SXRlbXMiLCJkZXNjcmliZSIsIml0IiwiZG9uZSIsInVybCIsIm1ldGhvZCIsImhlYWRlcnMiLCJqc29uIiwiZXJyb3IiLCJyZXNwb25zZSIsImJvZHkiLCJlcXVhbCIsInN0YXR1c0NvZGUiLCJjb25zb2xlIiwibG9nIiwiaXRlbXMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFNBQUQsQ0FBdkI7QUFBQSxNQUNJQyxNQUFNLEdBQUdELE9BQU8sQ0FBQyxRQUFELENBRHBCO0FBQUEsTUFFSUUsUUFBUSxHQUFHLHdCQUZmOztBQUtBLFNBQVFDLFVBQVIsUUFBeUIsa0JBQXpCO0FBRUFDLFFBQVEsQ0FBQyxlQUFELEVBQWtCLE1BQU07QUFDNUJBLEVBQUFBLFFBQVEsQ0FBQyxxQkFBRCxFQUF3QixZQUFXO0FBQ3ZDQyxJQUFBQSxFQUFFLENBQUMsNkJBQUQsRUFBZ0MsVUFBU0MsSUFBVCxFQUFlO0FBQzdDUCxNQUFBQSxPQUFPLENBQUM7QUFDSlEsUUFBQUEsR0FBRyxFQUFFTCxRQUFRLEdBQUcsb0JBRFo7QUFFSk0sUUFBQUEsTUFBTSxFQUFFLEtBRko7QUFHSkMsUUFBQUEsT0FBTyxFQUFFO0FBQ0wsMEJBQWdCO0FBRFgsU0FITDtBQU1KQyxRQUFBQSxJQUFJLEVBQUU7QUFDRixtQkFBUyxDQUFDLFFBQUQsRUFBVSxNQUFWLEVBQWlCLE1BQWpCLENBRFA7QUFFTCxzQkFBYTtBQUZSO0FBTkYsT0FBRCxFQVNBLFVBQVNDLEtBQVQsRUFBZ0JDLFFBQWhCLEVBQTBCQyxJQUExQixFQUFnQztBQUNuQ1osUUFBQUEsTUFBTSxDQUFDYSxLQUFQLENBQWEsR0FBYixFQUFrQkYsUUFBUSxDQUFDRyxVQUEzQjtBQUNBQyxRQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUwsUUFBUSxDQUFDQyxJQUFyQjtBQUNBUCxRQUFBQSxJQUFJO0FBQ1AsT0FiTSxDQUFQO0FBY0gsS0FmQyxDQUFGO0FBZ0JILEdBakJPLENBQVI7QUFrQkgsQ0FuQk8sQ0FBUjtBQXFCQUYsUUFBUSxDQUFDLHVCQUFELEVBQTBCLE1BQU07QUFDcENBLEVBQUFBLFFBQVEsQ0FBQyxZQUFELEVBQWUsWUFBVztBQUM5QkMsSUFBQUEsRUFBRSxDQUFDLGtDQUFELEVBQXFDLFVBQVNDLElBQVQsRUFBZTtBQUNsRCxZQUFNWSxLQUFLLEdBQUcsQ0FBQyxRQUFELEVBQVUsTUFBVixFQUFpQixNQUFqQixDQUFkO0FBQ0FGLE1BQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZZCxVQUFVLENBQUNlLEtBQUQsQ0FBdEI7QUFDQWpCLE1BQUFBLE1BQU0sQ0FBQ2EsS0FBUCxDQUNJLEdBREosRUFFRVgsVUFBVSxDQUFDZSxLQUFELENBRlo7QUFHSCxLQU5DLENBQUY7QUFPSCxHQVJPLENBQVI7QUFTSCxDQVZPLENBQVIiLCJzb3VyY2VSb290IjoiL1VzZXJzL2lhcXVpbm80Ny9Qcm9qZWN0cy9zaG9wcGluZy1iYXNrZXQvdGVzdCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHJlcXVlc3QgPSByZXF1aXJlKFwicmVxdWVzdFwiKSxcbiAgICBhc3NlcnQgPSByZXF1aXJlKCdhc3NlcnQnKSxcbiAgICBiYXNlX3VybCA9IFwiaHR0cDovL2xvY2FsaG9zdDo1MDAwL1wiO1xuXG5cbmltcG9ydCB7Y291bnRJdGVtc30gZnJvbSAnLi4vaGVscGVybWV0aG9kcydcblxuZGVzY3JpYmUoXCJSZXNwb25zZSBUZXN0XCIsICgpID0+IHtcbiAgICBkZXNjcmliZShcIi9hcGkvc2hvcHBpbmdfdG90YWxcIiwgZnVuY3Rpb24oKSB7XG4gICAgICAgIGl0KFwiUFVUIHJldHVybnMgc3RhdHVzIGNvZGUgMjAwXCIsIGZ1bmN0aW9uKGRvbmUpIHtcbiAgICAgICAgICAgIHJlcXVlc3Qoe1xuICAgICAgICAgICAgICAgIHVybDogYmFzZV91cmwgKyBcImFwaS9zaG9wcGluZ190b3RhbFwiLFxuICAgICAgICAgICAgICAgIG1ldGhvZDogXCJQVVRcIixcbiAgICAgICAgICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICAgICAgICAgIFwiY29udGVudC10eXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGpzb246IHtcbiAgICAgICAgICAgICAgICAgICAgXCJpdGVtc1wiOiBbXCJBcHBsZXNcIixcIk1pbGtcIixcIlNvdXBcIl0sXG5cdCAgICAgICAgICAgICAgICBcImN1cnJlbmN5XCIgOiBcIlVTRFwiXG4gICAgICAgICAgICAgICAgfX0sZnVuY3Rpb24oZXJyb3IsIHJlc3BvbnNlLCBib2R5KSB7XG4gICAgICAgICAgICAgICAgYXNzZXJ0LmVxdWFsKDIwMCwgcmVzcG9uc2Uuc3RhdHVzQ29kZSk7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UuYm9keSlcbiAgICAgICAgICAgICAgICBkb25lKCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfSkgICAgXG59KTtcblxuZGVzY3JpYmUoXCJDb3VudCBpdGVtcyBpbiBhIGxpc3RcIiwgKCkgPT4ge1xuICAgIGRlc2NyaWJlKFwiY291bnRJdGVtc1wiLCBmdW5jdGlvbigpIHtcbiAgICAgICAgaXQoXCJyZXR1cm5zIGFuIG9iamVjdCAtIGl0ZW1zOiBjb3VudFwiLCBmdW5jdGlvbihkb25lKSB7XG4gICAgICAgICAgICBjb25zdCBpdGVtcyA9IFtcIkFwcGxlc1wiLFwiTWlsa1wiLFwiU291cFwiXTtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGNvdW50SXRlbXMoaXRlbXMpKVxuICAgICAgICAgICAgYXNzZXJ0LmVxdWFsKFxuICAgICAgICAgICAgICAgIDIwMFxuICAgICAgICAgICAgLCBjb3VudEl0ZW1zKGl0ZW1zKSk7XG4gICAgICAgIH0pO1xuICAgIH0pICAgIFxufSk7XG5cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "shopping_spec.js"
      ],
      "names": [
        "request",
        "require",
        "assert",
        "base_url",
        "countItems",
        "describe",
        "it",
        "done",
        "url",
        "method",
        "headers",
        "json",
        "error",
        "response",
        "body",
        "equal",
        "statusCode",
        "console",
        "log",
        "items"
      ],
      "mappings": "AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;AAAA,MACIC,MAAM,GAAGD,OAAO,CAAC,QAAD,CADpB;AAAA,MAEIE,QAAQ,GAAG,wBAFf;;AAKA,SAAQC,UAAR,QAAyB,kBAAzB;AAEAC,QAAQ,CAAC,eAAD,EAAkB,MAAM;AAC5BA,EAAAA,QAAQ,CAAC,qBAAD,EAAwB,YAAW;AACvCC,IAAAA,EAAE,CAAC,6BAAD,EAAgC,UAASC,IAAT,EAAe;AAC7CP,MAAAA,OAAO,CAAC;AACJQ,QAAAA,GAAG,EAAEL,QAAQ,GAAG,oBADZ;AAEJM,QAAAA,MAAM,EAAE,KAFJ;AAGJC,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX,SAHL;AAMJC,QAAAA,IAAI,EAAE;AACF,mBAAS,CAAC,QAAD,EAAU,MAAV,EAAiB,MAAjB,CADP;AAEL,sBAAa;AAFR;AANF,OAAD,EASA,UAASC,KAAT,EAAgBC,QAAhB,EAA0BC,IAA1B,EAAgC;AACnCZ,QAAAA,MAAM,CAACa,KAAP,CAAa,GAAb,EAAkBF,QAAQ,CAACG,UAA3B;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYL,QAAQ,CAACC,IAArB;AACAP,QAAAA,IAAI;AACP,OAbM,CAAP;AAcH,KAfC,CAAF;AAgBH,GAjBO,CAAR;AAkBH,CAnBO,CAAR;AAqBAF,QAAQ,CAAC,uBAAD,EAA0B,MAAM;AACpCA,EAAAA,QAAQ,CAAC,YAAD,EAAe,YAAW;AAC9BC,IAAAA,EAAE,CAAC,kCAAD,EAAqC,UAASC,IAAT,EAAe;AAClD,YAAMY,KAAK,GAAG,CAAC,QAAD,EAAU,MAAV,EAAiB,MAAjB,CAAd;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYd,UAAU,CAACe,KAAD,CAAtB;AACAjB,MAAAA,MAAM,CAACa,KAAP,CACI,GADJ,EAEEX,UAAU,CAACe,KAAD,CAFZ;AAGH,KANC,CAAF;AAOH,GARO,CAAR;AASH,CAVO,CAAR",
      "sourceRoot": "/Users/iaquino47/Projects/shopping-basket/test",
      "sourcesContent": [
        "const request = require(\"request\"),\n    assert = require('assert'),\n    base_url = \"http://localhost:5000/\";\n\n\nimport {countItems} from '../helpermethods'\n\ndescribe(\"Response Test\", () => {\n    describe(\"/api/shopping_total\", function() {\n        it(\"PUT returns status code 200\", function(done) {\n            request({\n                url: base_url + \"api/shopping_total\",\n                method: \"PUT\",\n                headers: {\n                    \"content-type\": \"application/json\",\n                    },\n                json: {\n                    \"items\": [\"Apples\",\"Milk\",\"Soup\"],\n\t                \"currency\" : \"USD\"\n                }},function(error, response, body) {\n                assert.equal(200, response.statusCode);\n                console.log(response.body)\n                done();\n            });\n        });\n    })    \n});\n\ndescribe(\"Count items in a list\", () => {\n    describe(\"countItems\", function() {\n        it(\"returns an object - items: count\", function(done) {\n            const items = [\"Apples\",\"Milk\",\"Soup\"];\n            console.log(countItems(items))\n            assert.equal(\n                200\n            , countItems(items));\n        });\n    })    \n});\n\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1580744226127
  }
}